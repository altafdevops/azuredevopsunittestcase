# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'   

# - task: SonarQubePrepare@5
#  inputs:
#     SonarQube: 'sonarqubesvcconn'
#     scannerMode: 'MSBuild'
#     projectKey: 'dotnetcoredocker_dotnetcoredocker_AYvTLTe9ZRXHkaAxlSv7'
#     projectName: 'dotnetcoredocker'
     
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'dotnetappswithunitestcase/*.csproj'
  displayName: 'Restore of dotnet  '  
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: 'dotnetappswithunitestcase/*.csproj'
  displayName: 'dotnet build $(buildConfiguration)'   

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    
    projects: 'dotnetunittestcase/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
    testRunTitle: 'dotnetunittestreport'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
- task: PublishPipelineArtifact@1
  inputs:
   targetPath:  $(Build.ArtifactStagingDirectory)
   artifactName: 'dotnetappsunittestcase'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(1b5f28cb-5b3c-419e-84d4-09403138d50c)'
    appType: 'webApp'
    WebAppName: 'dotnetappdev'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'


   
    
    

     
  
   
    